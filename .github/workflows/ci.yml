name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11', '3.12', '3.13']

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 1

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install uv
      uses: astral-sh/setup-uv@v2
      with:
        enable-cache: true

    - name: Install dependencies
      run: |
        uv sync --dev

    - name: Run linting
      run: |
        uv run ruff check src/ tests/
        uv run ruff format --check src/ tests/

    # Type checking disabled for now - can be enabled later
    # - name: Run type checking
    #   run: |
    #     uv run mypy src/ --ignore-missing-imports

    - name: Run tests with coverage
      run: |
        uv run pytest tests/ --cov=src --cov-report=xml --cov-report=term-missing -v

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  test-installation:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Test installation script
      run: |
        chmod +x install.sh
        ./install.sh --dry-run

    - name: Test package installation
      run: |
        pip install -e .
        which captains-log || echo "Package installed successfully"

  security:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Install uv
      uses: astral-sh/setup-uv@v2

    - name: Install dependencies
      run: uv sync --dev

    - name: Run security audit
      run: |
        uv run pip-audit --requirement pyproject.toml --format=json --output=security-report.json || true

    - name: Upload security report
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: security-report
        path: security-report.json
